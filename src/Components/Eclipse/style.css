/*
 * Scale notes:
 *
 * Orient the Earth-Moon model horizontally or vertically based on which direction fits better on screen.
 *
 * Moon diameter:    2,160.1 miles
 * Earth diameter:   7,917.5 miles
 * Sun diameter:   865,370   miles

 * Moon-Earth distance:    240,000 miles  --> stretched to fit 
 * Earth-Sun distance:  93,000,000 miles (387.5x above distance)
 */

.eclipse-animation
{
    margin: .7em .2em;
    display: flex;
    align-content: center;
    justify-content: center;
    height: calc(100vh - 100px);
    max-height: 25em;
    max-width: 25em;
    margin: 10px auto;
    background-image: url('./universe.png');
    background-size: cover;
    overflow: hidden;
    color: white;
    border-radius: 20px;

    /* When the Earth and Moon are "absolute" positioned, they are positioned relative to this div */
    position: relative;
    
    /* Scale the model according to what fits along the shortest screen axis. */
    /* This must account for the header height of 70px */
    --earth-moon-distance: calc(min(50svh - 90px, 50svw - 20px));

    /* Earth-Moon distance is 240,000 miles and is scaled down to the above CSS length */
    --pixels-per-mile: calc(var(--earth-moon-distance) / 240000);
    --moon-diameter: calc(2160.1 * var(--pixels-per-mile));
    --earth-diameter: calc(7917.5 * var(--pixels-per-mile));
}

.eclipse-animation > div{
    position: absolute;
    font-size: large;
    text-align: left;
}

/* Message that the illustration is to-scale, i.e. size of Moon and Earth are to scale with the distance between them */
.eclipse-animation > .scale{
    right: 20px;
    top: 20px;
    text-align: right;
}

.eclipse-animation > .Sun-label{
    left: 20px;
    top: 20px;
}

.eclipse-animation > .solar-eclipse{
    top: calc(50% - var(--earth-moon-distance) - 1em);
}

.eclipse-animation > .lunar-eclipse{
    top: calc(50% + var(--earth-moon-distance) + 1em);
}

/* Center both labels */
.eclipse-animation > .solar-eclipse,
.eclipse-animation > .lunar-eclipse{
    width: 10em;
    left: calc(50% - 5em);
    text-align: center;
}

/* Place Earth in center of view */
.eclipse-animation > .Earth{
    background: linear-gradient(to bottom, rgb(36, 223, 83), rgb(55,55,55));
    border-radius: 50%;
    width: var(--earth-diameter);
    height: var(--earth-diameter);
    left: calc(50% - var(--earth-diameter)/2);
    top: calc(50% - var(--earth-diameter)/2);
}

/* Moon-Orbit rotates around with its origin at the Earth to make the moon follow an arc around the Earth */
.eclipse-animation > .Earth > .Moon-Orbit{
    position: relative;
    transform-origin: 0 0;
    left: 50%;
    top: 50%;
    width: var(--earth-moon-distance);
    animation: orbit-moon-orbit 5s linear normal infinite;
}

/* Moon-Orbit elemnt rotates around the Eatth with the Moon at arms length. This causes the Moon to orbit the Earth. */
.eclipse-animation > .Earth > .Moon-Orbit > .Moon{
    background: white;
    content: "Moon";
    position: absolute;
    top: 0;
    right: 0;
    border-radius: 50%;
    width: var(--moon-diameter);
    height: var(--moon-diameter);
    
    /* Outer-rotate the Moon so its shadow and label aren't rendered rotated */
    animation:orbit-moon-orbit-inverse 5s linear normal infinite;
}

/* Earth and Moon shadow generically drop downward from the center of the celestial body */
.eclipse-animation .Shadow{
    background-color: rgba(255, 255, 255, 0.25);
    position: absolute;
    top: 50%;
    height: calc(var(--earth-moon-distance)*10);
}

.eclipse-animation > .Earth > .Moon-Orbit > .Moon > .Shadow{
    width: var(--moon-diameter);
}

.eclipse-animation > .Earth > .Shadow{
    width: var(--earth-diameter);
}

.eclipse-animation > .Earth::after{
    content: "Earth";
}

.eclipse-animation > .Earth > .Moon-Orbit > .Moon::after{
    content: "Moon";
}

.eclipse-animation > .Earth::after,
.eclipse-animation > .Earth > .Moon-Orbit > .Moon::after{
    position: relative;

    /* Offset labels from where the Earth/Moon is drawn */
    left: 1em;
    top: 1em;
}

@keyframes orbit-moon-orbit {
    from { transform: rotateZ(0deg) }
    50% { transform: rotateZ(180deg) }
    to { transform: rotateZ(360deg) }
}

/* Invert the rotation of the above transition so a child object can undo its parent's rotation */
@keyframes orbit-moon-orbit-inverse {
    from { transform: rotateZ(0deg) }
    50% { transform: rotateZ(-180deg) }
    to { transform: rotateZ(-360deg) }
}
